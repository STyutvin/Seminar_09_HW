# 1. Напишите функцию to_dict(lst), которая принимает аргумент в виде списка и возвращает словарь, 
# в котором каждый элемент списка является и ключом и значением. 
# Предполагается, что элементы списка будут соответствовать правилам задания ключей в словарях.

# Может я чего-то не понимаю, но я ума не приложу, для чего в данном случае нужно создавать отдельную функцию для создания словаря.
# Как вариант, предлагаю функцию создания случайных числовых списков.

# def rand_list(n): 
#     from random import randint
#     some_list=[]
#     for i in range(n):
#         some_list.append(randint(1,10))
#     return some_list

# k=int(input('Количество элементов для списка: '))
# new_list=rand_list(k)
# my_dictionary={num: num for num in new_list}

# print(my_dictionary)
#-----------------------------------------------------------------

# 2. Иван решил создать самый большой словарь в мире. Для этого он придумал функцию biggest_dict(**kwargs),
# которая принимает неограниченное количество параметров «ключ: значение» и обновляет созданный им словарь my_dict,
# состоящий всего из одного элемента «first_one» со значением «we can do it». Воссоздайте эту функцию.

# Насколько я понял, при использовании **kwargs переменая kwargs уже является словарем.
# Поэтому, задав сколь угодно много переменных и их значения, получим словарь, где переменная - ключ.
# Однако "словарь my_dict,  состоящий всего из одного элемента «first_one» со значением «we can do it»" - вот это для меня непонятно,
# что имелось ввиду, и как этот элемент использовать в коде.

def biggest_dict(**my_dict):
        print(my_dict)

biggest_dict(fruit1='Яблоко', fruit2='Апельсин', fruit3='Мандарин')